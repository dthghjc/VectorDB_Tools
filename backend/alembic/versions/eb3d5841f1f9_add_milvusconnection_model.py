"""Add MilvusConnection model

Revision ID: eb3d5841f1f9
Revises: b80e0fb26428
Create Date: 2025-09-12 14:46:46.364450

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'eb3d5841f1f9'
down_revision: Union[str, Sequence[str], None] = 'b80e0fb26428'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('milvus_connections',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, comment="连接配置的用户自定义名称，如 'Production Milvus' 或 'Test Environment'"),
    sa.Column('description', sa.String(length=500), nullable=True, comment='连接配置的描述信息'),
    sa.Column('host', sa.String(length=255), nullable=False, comment="Milvus 服务器主机地址，如 'localhost' 或 'milvus.example.com'"),
    sa.Column('port', sa.Integer(), server_default='19530', nullable=False, comment='Milvus 服务器端口，默认 19530'),
    sa.Column('database_name', sa.String(length=255), nullable=True, comment='Milvus 数据库名称，可选（Milvus 2.0+ 支持多数据库）'),
    sa.Column('encrypted_username', sa.Text(), nullable=True, comment='使用 AES 对称加密存储的用户名（如果启用了认证）'),
    sa.Column('encrypted_password', sa.Text(), nullable=True, comment='使用 AES 对称加密存储的密码（如果启用了认证）'),
    sa.Column('username_preview', sa.String(length=50), nullable=True, comment="用户名的安全预览格式，如 'admin****'"),
    sa.Column('secure', sa.Boolean(), server_default='false', nullable=False, comment='是否使用 TLS/SSL 安全连接'),
    sa.Column('status', sa.String(length=20), server_default='active', nullable=False, comment='连接状态：active(启用) 或 inactive(禁用)'),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True, comment='最后一次使用该连接的时间'),
    sa.Column('usage_count', sa.Integer(), server_default='0', nullable=False, comment='连接的累计使用次数'),
    sa.Column('last_tested_at', sa.DateTime(timezone=True), nullable=True, comment='最后一次测试该连接的时间'),
    sa.Column('test_status', sa.String(length=20), nullable=True, comment='最后一次测试状态：success(成功) 或 failed(失败)'),
    sa.Column('test_message', sa.String(length=500), nullable=True, comment='最后一次测试的详细信息或错误消息'),
    sa.Column('test_response_time', sa.Float(), nullable=True, comment='最后一次测试的响应时间（毫秒）'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("status IN ('active', 'inactive')", name='ck_milvus_connection_status'),
    sa.CheckConstraint('port > 0 AND port <= 65535', name='ck_milvus_connection_port_range'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'name', name='uq_user_milvus_connection_name')
    )
    op.create_index(op.f('ix_milvus_connections_id'), 'milvus_connections', ['id'], unique=False)
    op.create_index(op.f('ix_milvus_connections_name'), 'milvus_connections', ['name'], unique=False)
    op.create_index(op.f('ix_milvus_connections_status'), 'milvus_connections', ['status'], unique=False)
    op.create_index(op.f('ix_milvus_connections_user_id'), 'milvus_connections', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_milvus_connections_user_id'), table_name='milvus_connections')
    op.drop_index(op.f('ix_milvus_connections_status'), table_name='milvus_connections')
    op.drop_index(op.f('ix_milvus_connections_name'), table_name='milvus_connections')
    op.drop_index(op.f('ix_milvus_connections_id'), table_name='milvus_connections')
    op.drop_table('milvus_connections')
    # ### end Alembic commands ###
