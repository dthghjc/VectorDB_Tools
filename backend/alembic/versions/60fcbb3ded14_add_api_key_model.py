"""add api-key model

Revision ID: 60fcbb3ded14
Revises: 40f3ad84743f
Create Date: 2025-09-04 15:33:45.555222

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '60fcbb3ded14'
down_revision: Union[str, Sequence[str], None] = '40f3ad84743f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_keys',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, comment="API Key 的用户自定义名称，如 'OpenAI GPT-4'"),
    sa.Column('provider', sa.String(length=100), nullable=False, comment="服务提供商，如 'OpenAI', 'Google', 'Anthropic'"),
    sa.Column('base_url', sa.String(length=500), nullable=False, comment="API 基础 URL，如 'https://api.openai.com/v1'"),
    sa.Column('encrypted_api_key', sa.Text(), nullable=False, comment='使用 AES 对称加密存储的完整 API Key'),
    sa.Column('key_preview', sa.String(length=50), nullable=False, comment="API Key 的安全预览格式，如 'sk-proj****...****abcd'"),
    sa.Column('status', sa.String(length=20), server_default='active', nullable=False, comment='API Key 状态：active(启用) 或 inactive(禁用)'),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True, comment='最后一次使用该 API Key 的时间'),
    sa.Column('usage_count', sa.Integer(), server_default='0', nullable=False, comment='API Key 的累计使用次数'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("status IN ('active', 'inactive')", name='ck_api_key_status'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'name', name='uq_user_api_key_name')
    )
    op.create_index(op.f('ix_api_keys_id'), 'api_keys', ['id'], unique=False)
    op.create_index(op.f('ix_api_keys_name'), 'api_keys', ['name'], unique=False)
    op.create_index(op.f('ix_api_keys_provider'), 'api_keys', ['provider'], unique=False)
    op.create_index(op.f('ix_api_keys_status'), 'api_keys', ['status'], unique=False)
    op.create_index(op.f('ix_api_keys_user_id'), 'api_keys', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_api_keys_user_id'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_status'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_provider'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_name'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_id'), table_name='api_keys')
    op.drop_table('api_keys')
    # ### end Alembic commands ###
